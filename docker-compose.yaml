version: '3.9'

services:

  parser:
    build:
      context: .
      dockerfile: parser/Dockerfile.parser
    restart: on-failure
    depends_on:
      - mongo_prod
      - mongo_dev
    networks:
      - recipes
    profiles:
      - prod
      - dev
#    user: 1000:1000

  mongo_prod:
    image: mongo:5.0
    command: "mongod --dbpath /data/db"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - recipes
    profiles:
      - prod
    volumes:
      - ./mongo/init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-mongo-init.js:ro
      - ./.artifacts/mongo/:/data/db

  mongo_dev:
    image: mongo:5.0
    command: "mongod --dbpath /data/db"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - recipes
#    network_mode: host
    profiles:
      - dev
    volumes:
      - ./mongo/init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-mongo-init.js:ro
      - ./.artifacts/mongo/:/data/db
    ports:
      - 27017:27017

  mutator:
    build:
      context: .
      dockerfile: mutator/Dockerfile.mutator
    restart: on-failure
    depends_on:
      - mongo_dev
    networks:
      - recipes
    profiles:
      - dev

networks:
  recipes:
    name: recipes